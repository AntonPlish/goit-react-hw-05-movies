{"version":3,"file":"static/js/933.6d320acc.chunk.js","mappings":"4TAcMA,EAAM,mCACNC,EAAc,+BACdC,EAAS,UAAMD,EAAN,wBACTE,EAAS,UAAMF,EAAN,iBACTG,EAAK,UAAMH,EAAN,WAgBJ,SAAeI,IAAtB,+B,aAAO,O,oBAAA,6GAEoBC,IAAAA,IAAA,UACZJ,EADY,oBACSF,IAH7B,cAEOO,EAFP,yBAKQA,GALR,yDAOQ,KAAMC,SAPd,gFAoBA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,gGAEoBJ,IAAAA,IAAA,UACZH,EADY,oBACSH,EADT,kBACsBU,IAH1C,cAEOH,EAFP,yBAKQA,GALR,yDAOQ,KAAMC,SAPd,gFAoBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBN,IAAAA,IAAA,6CAAgDM,EAAhD,oBAAmEZ,IAFvF,cAEOO,EAFP,yBAGQA,GAHR,yDAKQ,KAAMC,SALd,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,gGAEwBR,IAAAA,IAAA,UAAaF,GAAb,OAAqBU,EAArB,4BAA2Cd,IAFnE,cAEOe,EAFP,yBAGQA,GAHR,yDAKQ,KAAMP,SALd,gFASA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEwBR,IAAAA,IAAA,UAAaF,GAAb,OAAqBU,EAArB,4BAA2Cd,IAFnE,cAEOe,EAFP,yBAGQA,GAHR,yDAKQ,KAAMP,SALd,wF,4ICxFDS,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,oBCmBD,EAxCqB,WAAO,IAAD,QACfV,GAAYY,EAAAA,EAAAA,MAAZZ,QACR,GAA0Ba,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACNnB,EAAAA,EAAAA,IAAaC,GAASmB,KAAKJ,EAC9B,GAAE,CAACf,KAECc,EAAS,OAAO,KAErB,MAAwEA,EAAMnB,KAAtEyB,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,eAAgBC,EAAvC,EAAuCA,WAAYC,EAAnD,EAAmDA,SAAUC,EAA7D,EAA6DA,OAEvDC,EAAY,iBAAGT,QAAH,IAAGA,GAAH,UAAGA,EAAUU,aAAb,aAAG,EAAiBC,YAApB,QAA4B,UAE9C,OACI,4BACI,SAACnB,EAAD,CAAUC,GAAIgB,EAAd,6BACA,4BACI,gBAAKG,IAAG,8CAAyCR,GAAiBS,IAAI,GAAGC,MAAO,OAChF,qCAAaT,EAAb,MAAgCrB,MAChC,wCAAgBsB,MAChB,uCACA,uBAAIC,KACJ,oCACA,wBAAKC,EAAOO,KAAI,gBAAG7B,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,KAAP,OAAkB,8BAAeA,IAAN9B,EAA3B,UAEpB,2BACI,yBACI,SAAC,KAAD,CAAMO,GAAG,OAAOiB,MAAO,CAAEC,KAAI,OAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAUU,aAAZ,aAAE,EAAiBC,MAAhD,qCAEJ,yBACI,SAAC,KAAD,CAAMlB,GAAG,UAAUiB,MAAO,CAAEC,KAAI,OAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAUU,aAAZ,aAAE,EAAiBC,MAAnD,0CAGR,SAAC,KAAD,MAGX,C","sources":["Api/Api.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["// export async function getTrendingToday()\n//     const response = await axios.get(`/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`);\n\n// export async function getMovie(id)\n//     const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n// export async function getCredits(id)\n//     const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n\n// export async function getReviews(id)\n//     const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n\nimport axios from \"axios\";\n\nconst KEY = '1cd7fff4942b0a82f9d2c241c5225c79';\nconst DEFAULT_URL = 'https://api.themoviedb.org/3';\nconst BY_TRENDS = `${DEFAULT_URL}/trending/movie/week`;\nconst BY_SEARCH = `${DEFAULT_URL}/search/movie`;\nconst BY_ID = `${DEFAULT_URL}/movie/`;\nconst renderPoster = 'https://image.tmdb.org/t/p/w500';\nexport { KEY, DEFAULT_URL, BY_TRENDS, BY_SEARCH, BY_ID, renderPoster };\n\n\n// export async function getMovie() {\n//     await fetch(`${BY_TRENDS}?api_key=${KEY}&language=en`)\n//         .then(response => response.json())\n//         .then(response => {\n//             return response.results;\n//         })\n//         .catch(error => {\n//             return error.message\n//         })\n// }\n\nexport async function getMovies() {\n    try {\n        const data = await axios.get(\n            `${BY_TRENDS}?api_key=${KEY}`\n        );\n        return data;\n    } catch (error) {\n        return error.message;\n    }\n}\n\n//Fetch by Search\n// export async function getBySearchMovies (formInput, page = 1) {\n//     await fetch(`${BY_SEARCH}?api_key=${KEY}&query=${formInput}&page=${page}`)\n//         .then(response => response.json())\n//         .then(response => {\n//             return (response.results)\n//         })\n//         .catch(error => { });\n// }\nexport async function getBySearchMovies(formInput) {\n    try {\n        const data = await axios.get(\n            `${BY_SEARCH}?api_key=${KEY}&query=${formInput}`\n        );\n        return data;\n    } catch (error) {\n        return error.message;\n    }\n}\n\n\n// export async function getMovieById(id) {\n//     await fetch(`${BY_ID}${id}?api_key=${KEY}`)\n//         .then(response => response.json())\n//         .then(response => {\n//             return (response)\n//         })\n//         .catch(error => { });\n// }\nexport async function getMovieById(movieId) {\n    try {\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`);\n        return data;\n    } catch (error) {\n        return error.message;\n    }\n}\n\nexport async function getCast(id) {\n    try {\n        const response = await axios.get(`${BY_ID}${id}/credits?api_key=${KEY}`);\n        return response;\n    } catch (error) {\n        return error.message;\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BY_ID}${id}/reviews?api_key=${KEY}`);\n        return response;\n    } catch (error) {\n        return error.message;\n    };\n}","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Link, useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { BackLink } from \"../components/BackLink/BackLink\";\nimport { getMovieById } from \"../Api/Api\";\nimport { useEffect, useState,  } from \"react\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        getMovieById(movieId).then(setMovie);\n    }, [movieId]);\n\n    if (!movie) { return null };\n    \n    const { backdrop_path, original_title, popularity, overview, genres } = movie.data;\n\n    const backLinkHref = location?.state?.from ?? \"/movies\";\n\n    return (\n        <div>\n            <BackLink to={backLinkHref}>Back to movies</BackLink>\n            <div>\n                <img src={`https://image.tmdb.org/t/p/original/${backdrop_path}`} alt=\"\" width={600}/>\n                <h2>Movie - {original_title} - {movieId}</h2>\n                <p>User score: {popularity}</p>\n                <h3>Ovwerview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <ul>{genres.map(({ id, name }) => <li key={id}> {name}</li>)}</ul>\n            </div>\n            <ul>\n                <li>\n                    <Link to=\"cast\" state={{ from: location?.state?.from }}>Get to know the cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\" state={{ from: location?.state?.from }}>Go through the reviews</Link>\n                </li>\n            </ul>\n            <Outlet />\n        </div>\n    )\n};\n\nexport default MovieDetails;"],"names":["KEY","DEFAULT_URL","BY_TRENDS","BY_SEARCH","BY_ID","getMovies","axios","data","message","getBySearchMovies","formInput","getMovieById","movieId","getCast","id","response","getReviews","StyledLink","styled","Link","BackLink","to","children","size","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","backdrop_path","original_title","popularity","overview","genres","backLinkHref","state","from","src","alt","width","map","name"],"sourceRoot":""}