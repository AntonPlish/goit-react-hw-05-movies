{"version":3,"file":"static/js/688.99884f80.chunk.js","mappings":"4TAcMA,EAAM,mCACNC,EAAc,+BACdC,EAAS,UAAMD,EAAN,wBACTE,EAAS,UAAMF,EAAN,iBACTG,EAAK,UAAMH,EAAN,WAgBJ,SAAeI,IAAtB,+B,aAAO,O,oBAAA,6GAEoBC,IAAAA,IAAA,UACZJ,EADY,oBACSF,IAH7B,cAEOO,EAFP,yBAKQA,GALR,yDAOQ,KAAMC,SAPd,gFAoBA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,gGAEoBJ,IAAAA,IAAA,UACZH,EADY,oBACSH,EADT,kBACsBU,IAH1C,cAEOH,EAFP,yBAKQA,GALR,yDAOQ,KAAMC,SAPd,gFAoBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBN,IAAAA,IAAA,6CAAgDM,EAAhD,oBAAmEZ,IAFvF,cAEOO,EAFP,yBAGQA,GAHR,yDAKQ,KAAMC,SALd,gFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,gGAEwBR,IAAAA,IAAA,UAAaF,GAAb,OAAqBU,EAArB,4BAA2Cd,IAFnE,cAEOe,EAFP,yBAGQA,GAHR,yDAKQ,KAAMP,SALd,gFASA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEwBR,IAAAA,IAAA,6CAAgDQ,EAAhD,4BAAsEd,IAF9F,cAEOe,EAFP,yBAGQA,GAHR,yDAKQ,KAAMP,SALd,wF,qIC1FMS,EAAYC,EAAAA,GAAAA,IAAH,6CAITC,EAAcD,EAAAA,GAAAA,IAAH,6GASXE,EAAYF,EAAAA,GAAAA,EAAH,mF,SCGtB,EAfmB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OAEd,OACI,SAACJ,EAAD,UACKI,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,eAAgBT,EAAnB,EAAmBA,GAAnB,OACR,SAACK,EAAD,WACI,SAAC,KAAD,CAAMK,GAAE,iBAAYV,GAAMW,MAAO,CAAEC,KAAM,SAAzC,UACI,SAACN,EAAD,UAAYG,OAFFT,EADV,KAS3B,E,UCbYa,EAAUT,EAAAA,GAAAA,IAAH,sJAQPU,EAAQV,EAAAA,GAAAA,MAAH,+FAMLW,GAAOX,EAAAA,EAAAA,IAAOY,EAAAA,IAAPZ,CAAH,+FAOJa,EAASb,EAAAA,GAAAA,OAAH,+HCtBNc,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAQ1B,OACE,iBAAMC,SARa,SAAAC,GACnBA,EAAMC,iBAENH,EAASE,EAAME,cAAcC,SAASC,MAAMC,OAC5CL,EAAME,cAAcI,OACrB,EAGC,UACE,UAACd,EAAD,YACE,SAACC,EAAD,CACEc,KAAK,OACLC,KAAK,WAEP,UAACZ,EAAD,CAAQW,KAAK,SAAb,WAAsB,SAACb,EAAD,IAAtB,gBAIP,E,UCeD,EA9Be,WAAO,IAAD,IACjB,GAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOvB,EAAP,KAAewB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAW/C,IALAC,EAAAA,EAAAA,YAAU,WACDF,IACLxC,EAAAA,EAAAA,IAAkBwC,GAAWG,KAAKP,EACrC,GAAE,CAACI,KAEC5B,EACD,OAAO,KAOX,OACI,6BACI,SAACW,EAAD,CAAWC,SANA,SAAAU,GACfK,EAAyB,KAATL,EAAc,CAAEJ,MAAOI,GAAS,CAAC,EACpD,KAKQ,UAAAtB,EAAOd,YAAP,eAAa8C,WAAW,SAAC,EAAD,CAAYhC,OAAQA,EAAOd,KAAK8C,YAGpE,C","sources":["Api/Api.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["// export async function getTrendingToday()\n//     const response = await axios.get(`/trending/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`);\n\n// export async function getMovie(id)\n//     const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n// export async function getCredits(id)\n//     const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n\n// export async function getReviews(id)\n//     const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n\nimport axios from \"axios\";\n\nconst KEY = '1cd7fff4942b0a82f9d2c241c5225c79';\nconst DEFAULT_URL = 'https://api.themoviedb.org/3';\nconst BY_TRENDS = `${DEFAULT_URL}/trending/movie/week`;\nconst BY_SEARCH = `${DEFAULT_URL}/search/movie`;\nconst BY_ID = `${DEFAULT_URL}/movie/`;\nconst renderPoster = 'https://image.tmdb.org/t/p/w500';\nexport { KEY, DEFAULT_URL, BY_TRENDS, BY_SEARCH, BY_ID, renderPoster };\n\n\n// export async function getMovie() {\n//     await fetch(`${BY_TRENDS}?api_key=${KEY}&language=en`)\n//         .then(response => response.json())\n//         .then(response => {\n//             return response.results;\n//         })\n//         .catch(error => {\n//             return error.message\n//         })\n// }\n\nexport async function getMovies() {\n    try {\n        const data = await axios.get(\n            `${BY_TRENDS}?api_key=${KEY}`\n        );\n        return data;\n    } catch (error) {\n        return error.message;\n    }\n}\n\n//Fetch by Search\n// export async function getBySearchMovies (formInput, page = 1) {\n//     await fetch(`${BY_SEARCH}?api_key=${KEY}&query=${formInput}&page=${page}`)\n//         .then(response => response.json())\n//         .then(response => {\n//             return (response.results)\n//         })\n//         .catch(error => { });\n// }\nexport async function getBySearchMovies(formInput) {\n    try {\n        const data = await axios.get(\n            `${BY_SEARCH}?api_key=${KEY}&query=${formInput}`\n        );\n        return data;\n    } catch (error) {\n        return error.message;\n    }\n}\n\n\n// export async function getMovieById(id) {\n//     await fetch(`${BY_ID}${id}?api_key=${KEY}`)\n//         .then(response => response.json())\n//         .then(response => {\n//             return (response)\n//         })\n//         .catch(error => { });\n// }\nexport async function getMovieById(movieId) {\n    try {\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`);\n        return data;\n    } catch (error) {\n        return error.message;\n    }\n}\n\nexport async function getCast(id) {\n    try {\n        const response = await axios.get(`${BY_ID}${id}/credits?api_key=${KEY}`);\n        return response;\n    } catch (error) {\n        return error.message;\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`);\n        return response;\n    } catch (error) {\n        return error.message;\n    };\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: block;\n`;\n\nexport const CardWrapper = styled.div`\n    margin: 0;\n    padding: 0;\n\n    > a {\n        text-decoration: none;\n    }\n`;\n\nexport const MovieName = styled.p`\n    padding: 0;\n    margin: 0 0 4px 0;\n    color: blue;\n`;","import { Link } from \"react-router-dom\";\nimport { Container, CardWrapper, MovieName } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ movies }) => {\n    // const location = useLocation();\n        return (\n            <Container>\n                {movies.map(({ original_title, id }) => (\n                    <CardWrapper key={id}>\n                        <Link to={`movies/${id}`} state={{ from: \"/home\" }}>\n                            <MovieName>{original_title}</MovieName>\n                        </Link>\n                    </CardWrapper>\n                ))}\n            </Container>\n        );\n};\n\nexport default MoviesList;","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font-size: 16px;\n  text-transform: uppercase;\n`;","import { Wrapper, Input, Button, Icon } from \"./SearchBox.styled\";\n\nexport const SearchBox = ({ onSearch }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSearch(event.currentTarget.elements.query.value);\n    event.currentTarget.reset()\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Wrapper>\n        <Input\n          type=\"text\"\n          name=\"query\"\n        />\n        <Button type=\"submit\"><Icon></Icon>Search</Button>\n      </Wrapper>\n    </form>\n  );\n};","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState,  } from \"react\";\nimport MoviesList from \"../components/MoviesList/MoviesList\";\nimport { SearchBox } from \"../components/SearchBox/SearchBox\";\nimport { getBySearchMovies } from \"../Api/Api\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get(\"query\") ?? \"\";\n    \n    // const visibleMovies = movies.filter((movie) =>\n    //     movie.name.toLowerCase().includes(movieName.toLowerCase())\n    // );\n    \n    useEffect(() => {\n        if (!movieName) return;\n        getBySearchMovies(movieName).then(setMovies)\n    }, [movieName]);\n\n    if (!movies) {\n        return null;\n    }\n\n    const searchName = name => {\n        setSearchParams(name !== \"\" ? { query: name } : {});\n    }\n\n    return (\n        <main>\n            <SearchBox onSearch={searchName} />\n            {movies.data?.results && <MoviesList movies={movies.data.results}/>}\n        </main>\n    );\n};\n\nexport default Movies;"],"names":["KEY","DEFAULT_URL","BY_TRENDS","BY_SEARCH","BY_ID","getMovies","axios","data","message","getBySearchMovies","formInput","getMovieById","movieId","getCast","id","response","getReviews","Container","styled","CardWrapper","MovieName","movies","map","original_title","to","state","from","Wrapper","Input","Icon","HiSearch","Button","SearchBox","onSearch","onSubmit","event","preventDefault","currentTarget","elements","query","value","reset","type","name","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","then","results"],"sourceRoot":""}